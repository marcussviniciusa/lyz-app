{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/components/AIAnalysisAnimation.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ntype AIAnalysisAnimationProps = {\n  isAnalyzing: boolean;\n  progress: number;\n  message?: string;\n};\n\nconst AIAnalysisAnimation: React.FC<AIAnalysisAnimationProps> = ({ \n  isAnalyzing, \n  progress, \n  message = 'Processando análise de exames com IA...'\n}) => {\n  // Palavras para animação de texto\n  const words = [\n    'Extraindo dados...',\n    'Analisando padrões...',\n    'Correlacionando resultados...',\n    'Verificando indicadores...',\n    'Comparando com base de conhecimento...',\n    'Verificando valores de referência...',\n    'Gerando insights...',\n    'Preparando resumo...'\n  ];\n\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  // Atualiza a palavra a cada 2.5 segundos\n  React.useEffect(() => {\n    if (!isAnalyzing) return;\n    \n    const interval = setInterval(() => {\n      setCurrentWordIndex(prevIndex => \n        prevIndex === words.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 2500);\n    \n    return () => clearInterval(interval);\n  }, [isAnalyzing, words.length]);\n\n  if (!isAnalyzing) return null;\n\n  return (\n    <motion.div \n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      className=\"fixed inset-0 bg-slate-900/70 backdrop-blur-sm flex items-center justify-center z-50\"\n    >\n      <div className=\"bg-white rounded-xl shadow-2xl p-8 w-full max-w-lg relative overflow-hidden\">\n        {/* Gradiente decorativo no topo */}\n        <div className=\"absolute top-0 left-0 right-0 h-2 bg-gradient-to-r from-emerald-400 via-blue-500 to-purple-500\"></div>\n        \n        <div className=\"mb-6 text-center\">\n          <h3 className=\"text-xl font-semibold text-gray-800 mb-2\">{message}</h3>\n          <p className=\"text-gray-500 text-sm\">Isso pode levar alguns instantes</p>\n        </div>\n        \n        {/* Círculo animado */}\n        <div className=\"flex justify-center mb-8\">\n          <div className=\"relative w-32 h-32\">\n            {/* Círculo de fundo */}\n            <div className=\"absolute inset-0 rounded-full border-4 border-gray-100\"></div>\n            \n            {/* Círculo de progresso */}\n            <svg className=\"absolute inset-0 w-full h-full\" viewBox=\"0 0 100 100\">\n              <motion.circle\n                initial={{ pathLength: 0 }}\n                animate={{ pathLength: progress / 100 }}\n                transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                cx=\"50\"\n                cy=\"50\"\n                r=\"48\"\n                fill=\"transparent\"\n                stroke=\"url(#gradient)\"\n                strokeWidth=\"4\"\n                strokeLinecap=\"round\"\n                style={{\n                  rotate: \"-90deg\",\n                  transformOrigin: \"center\",\n                }}\n              />\n              <defs>\n                <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                  <stop offset=\"0%\" stopColor=\"#10b981\" />\n                  <stop offset=\"100%\" stopColor=\"#3b82f6\" />\n                </linearGradient>\n              </defs>\n            </svg>\n            \n            {/* Percentual no centro */}\n            <div className=\"absolute inset-0 flex items-center justify-center\">\n              <span className=\"text-2xl font-bold text-emerald-600\">{Math.round(progress)}%</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Animação de texto */}\n        <div className=\"text-center h-8 mb-6 overflow-hidden\">\n          <AnimatePresence mode=\"wait\">\n            <motion.p\n              key={currentWordIndex}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.5 }}\n              className=\"text-emerald-600 font-medium\"\n            >\n              {words[currentWordIndex]}\n            </motion.p>\n          </AnimatePresence>\n        </div>\n        \n        {/* Partículas pulsantes */}\n        <div className=\"relative h-2 w-full bg-gray-100 rounded-full overflow-hidden mb-2\">\n          <motion.div\n            className=\"absolute top-0 left-0 h-full bg-gradient-to-r from-emerald-500 to-blue-500\"\n            style={{ width: `${progress}%` }}\n            initial={{ width: 0 }}\n            animate={{ width: `${progress}%` }}\n            transition={{ duration: 0.5 }}\n          />\n        </div>\n        \n        <div className=\"text-center text-xs text-gray-400\">\n          Os resultados serão processados com precisão\n        </div>\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AIAnalysisAnimation;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 311, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/components/AIAnalysisResult.tsx"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\nimport type { AIAnalysisResult } from '@/services/aiAnalysisService';\nimport { Check, AlertTriangle, Brain, Sparkles } from 'lucide-react';\n\ninterface AIAnalysisResultProps {\n  result: AIAnalysisResult;\n}\n\nconst AIAnalysisResult: React.FC<AIAnalysisResultProps> = ({ result }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"bg-white rounded-lg shadow-lg p-6 mt-4 border border-emerald-100\"\n    >\n      <div className=\"flex items-center mb-4\">\n        <div className=\"bg-emerald-100 p-2 rounded-full mr-3\">\n          <Brain className=\"text-emerald-600 h-5 w-5\" />\n        </div>\n        <h3 className=\"text-lg font-semibold text-gray-800\">Análise por IA</h3>\n        <div className=\"ml-auto bg-emerald-100 px-3 py-1 rounded-full flex items-center\">\n          <Sparkles className=\"text-emerald-600 h-4 w-4 mr-1\" />\n          <span className=\"text-xs font-medium text-emerald-700\">Assistência IA</span>\n        </div>\n      </div>\n      \n      {/* Resumo */}\n      <div className=\"mb-5\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-1\">Resumo</h4>\n        <p className=\"text-gray-600\">{result.summary}</p>\n      </div>\n      \n      {/* Achados principais */}\n      <div className=\"mb-5\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Achados Principais</h4>\n        <ul className=\"space-y-2\">\n          {result.keyFindings.map((finding, index) => (\n            <motion.li \n              key={index}\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.1 * index, duration: 0.4 }}\n              className=\"flex items-start\"\n            >\n              <Check className=\"text-emerald-500 h-5 w-5 flex-shrink-0 mr-2 mt-0.5\" />\n              <span className=\"text-gray-600\">{finding}</span>\n            </motion.li>\n          ))}\n        </ul>\n      </div>\n      \n      {/* Recomendações */}\n      <div className=\"mb-5\">\n        <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Recomendações</h4>\n        <ul className=\"space-y-2\">\n          {result.recommendations.map((recommendation, index) => (\n            <motion.li \n              key={index}\n              initial={{ opacity: 0, x: -10 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.1 * index + 0.3, duration: 0.4 }}\n              className=\"flex items-start\"\n            >\n              <div className=\"bg-blue-100 p-1 rounded-full mr-2 mt-0.5\">\n                <Check className=\"text-blue-600 h-3 w-3\" />\n              </div>\n              <span className=\"text-gray-600\">{recommendation}</span>\n            </motion.li>\n          ))}\n        </ul>\n      </div>\n      \n      {/* Fatores de risco */}\n      {result.riskFactors && result.riskFactors.length > 0 && (\n        <div>\n          <h4 className=\"text-sm font-medium text-gray-700 mb-2\">Fatores de Risco</h4>\n          <ul className=\"space-y-2\">\n            {result.riskFactors.map((risk, index) => (\n              <motion.li \n                key={index}\n                initial={{ opacity: 0, x: -10 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: 0.1 * index + 0.6, duration: 0.4 }}\n                className=\"flex items-start\"\n              >\n                <div className=\"bg-amber-100 p-1 rounded-full mr-2 mt-0.5\">\n                  <AlertTriangle className=\"text-amber-600 h-3 w-3\" />\n                </div>\n                <span className=\"text-gray-600\">{risk}</span>\n              </motion.li>\n            ))}\n          </ul>\n        </div>\n      )}\n      \n      <div className=\"mt-6 pt-4 border-t border-gray-100 text-xs text-gray-400 text-center\">\n        Esta análise foi gerada por IA e deve ser revisada por um profissional de saúde.\n      </div>\n    </motion.div>\n  );\n};\n\nexport default AIAnalysisResult;\n"],"names":[],"mappings":";;;;AACA;AAEA;AAAA;AAAA;AAAA;;;;AAMA,MAAM,mBAAoD,CAAC,EAAE,MAAM,EAAE;IACnE,qBACE,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAU;;0BAEV,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;4BAAC,WAAU;;;;;;;;;;;kCAEnB,6LAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,6LAAC;gCAAK,WAAU;0CAAuC;;;;;;;;;;;;;;;;;;0BAK3D,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAE,WAAU;kCAAiB,OAAO,OAAO;;;;;;;;;;;;0BAI9C,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAG,WAAU;kCACX,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,sBAChC,6LAAC,6LAAA,CAAA,SAAM,CAAC,EAAE;gCAER,SAAS;oCAAE,SAAS;oCAAG,GAAG,CAAC;gCAAG;gCAC9B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,OAAO,MAAM;oCAAO,UAAU;gCAAI;gCAChD,WAAU;;kDAEV,6LAAC,uMAAA,CAAA,QAAK;wCAAC,WAAU;;;;;;kDACjB,6LAAC;wCAAK,WAAU;kDAAiB;;;;;;;+BAP5B;;;;;;;;;;;;;;;;0BAcb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAG,WAAU;kCACX,OAAO,eAAe,CAAC,GAAG,CAAC,CAAC,gBAAgB,sBAC3C,6LAAC,6LAAA,CAAA,SAAM,CAAC,EAAE;gCAER,SAAS;oCAAE,SAAS;oCAAG,GAAG,CAAC;gCAAG;gCAC9B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,OAAO,MAAM,QAAQ;oCAAK,UAAU;gCAAI;gCACtD,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,uMAAA,CAAA,QAAK;4CAAC,WAAU;;;;;;;;;;;kDAEnB,6LAAC;wCAAK,WAAU;kDAAiB;;;;;;;+BAT5B;;;;;;;;;;;;;;;;YAgBZ,OAAO,WAAW,IAAI,OAAO,WAAW,CAAC,MAAM,GAAG,mBACjD,6LAAC;;kCACC,6LAAC;wBAAG,WAAU;kCAAyC;;;;;;kCACvD,6LAAC;wBAAG,WAAU;kCACX,OAAO,WAAW,CAAC,GAAG,CAAC,CAAC,MAAM,sBAC7B,6LAAC,6LAAA,CAAA,SAAM,CAAC,EAAE;gCAER,SAAS;oCAAE,SAAS;oCAAG,GAAG,CAAC;gCAAG;gCAC9B,SAAS;oCAAE,SAAS;oCAAG,GAAG;gCAAE;gCAC5B,YAAY;oCAAE,OAAO,MAAM,QAAQ;oCAAK,UAAU;gCAAI;gCACtD,WAAU;;kDAEV,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,2NAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;;;;;;kDAE3B,6LAAC;wCAAK,WAAU;kDAAiB;;;;;;;+BAT5B;;;;;;;;;;;;;;;;0BAgBf,6LAAC;gBAAI,WAAU;0BAAuE;;;;;;;;;;;;AAK5F;KA7FM;uCA+FS","debugId":null}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/services/aiAnalysisService.ts"],"sourcesContent":["import axios from 'axios';\nimport { OpenAI } from 'openai';\n\n// Inicializar OpenAI client\nconst openai = new OpenAI({\n  apiKey: process.env.NEXT_PUBLIC_OPENAI_API_KEY || '',\n  dangerouslyAllowBrowser: true\n});\n\n// Interface para o tipo de dados de análise\nexport interface ExamAnalysisData {\n  findings?: string;\n  recommendations?: string;\n  fileNames?: string[];\n  patientInfo?: {\n    fullName?: string;\n    age?: number | string;\n    gender?: string;\n  };\n}\n\n// Interface para o resultado da análise\nexport interface AIAnalysisResult {\n  summary: string;\n  keyFindings: string[];\n  recommendations: string[];\n  riskFactors?: string[];\n}\n\n/**\n * Gera um resumo dos resultados de exames usando IA\n */\nexport const generateExamAnalysis = async (\n  data: ExamAnalysisData, \n  updateProgress: (progress: number) => void\n): Promise<AIAnalysisResult> => {\n  try {\n    // Simular progresso inicial\n    updateProgress(10);\n    \n    // Construir o prompt para a IA\n    let prompt = \"Faça uma análise médica profissional com base nas seguintes informações:\\n\\n\";\n    \n    if (data.patientInfo) {\n      prompt += `Paciente: ${data.patientInfo.fullName || 'Não informado'}\\n`;\n      prompt += `Idade: ${data.patientInfo.age || 'Não informada'}\\n`;\n      prompt += `Gênero: ${data.patientInfo.gender || 'Não informado'}\\n\\n`;\n    }\n    \n    // Adicionar informações dos achados\n    if (data.findings) {\n      prompt += `Achados nos exames: ${data.findings}\\n\\n`;\n    }\n    \n    // Adicionar informações das recomendações (se disponíveis)\n    if (data.recommendations) {\n      prompt += `Recomendações prévias: ${data.recommendations}\\n\\n`;\n    }\n    \n    // Mencionar os arquivos de exames (se houverem)\n    if (data.fileNames && data.fileNames.length > 0) {\n      prompt += `Arquivos de exames anexados: ${data.fileNames.join(', ')}\\n\\n`;\n    }\n\n    prompt += `Por favor, forneça uma análise completa incluindo:\n1. Um breve resumo dos achados principais\n2. Lista de pontos-chave identificados\n3. Recomendações específicas baseadas nos resultados\n4. Possíveis fatores de risco identificados (se houver)\n\nForneça a resposta em formato JSON com as chaves: \"summary\", \"keyFindings\", \"recommendations\" e \"riskFactors\".`;\n\n    updateProgress(30);\n    \n    // Simular um atraso para a análise\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    updateProgress(50);\n    \n    // Chamada para a API da OpenAI\n    const completion = await openai.chat.completions.create({\n      messages: [{ role: 'user', content: prompt }],\n      model: 'gpt-3.5-turbo',\n      response_format: { type: 'json_object' }\n    });\n    \n    updateProgress(80);\n    \n    // Extrair o resultado\n    const responseContent = completion.choices[0]?.message?.content || '{}';\n    const result = JSON.parse(responseContent) as AIAnalysisResult;\n    \n    updateProgress(100);\n    \n    return result;\n  } catch (error) {\n    console.error('Erro ao gerar análise do exame:', error);\n    \n    // Retornar um resultado padrão em caso de erro\n    return {\n      summary: 'Não foi possível gerar um resumo devido a um erro na análise.',\n      keyFindings: ['Erro na análise de IA'],\n      recommendations: ['Consulte um profissional de saúde para uma análise detalhada.']\n    };\n  }\n};\n\n/**\n * Versão mock para desenvolvimento/testes sem consumir a API da OpenAI\n */\nexport const generateExamAnalysisMock = async (\n  data: ExamAnalysisData,\n  updateProgress: (progress: number) => void\n): Promise<AIAnalysisResult> => {\n  // Simular progresso e atrasos\n  updateProgress(10);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  updateProgress(25);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  updateProgress(45);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  updateProgress(70);\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  updateProgress(90);\n  await new Promise(resolve => setTimeout(resolve, 500));\n  updateProgress(100);\n  \n  // Retornar um resultado fictício\n  return {\n    summary: `Análise dos exames do paciente ${data.patientInfo?.fullName || 'não identificado'} demonstra alguns achados que merecem atenção. ${data.findings ? 'Os principais achados incluem ' + data.findings.substring(0, 100) + '...' : 'Não foram fornecidos detalhes específicos sobre os achados.'}`,\n    keyFindings: [\n      'Níveis ligeiramente elevados nos marcadores inflamatórios',\n      'Resultados dentro da normalidade para função hepática e renal',\n      'Hemograma completo sem alterações significativas'\n    ],\n    recommendations: [\n      'Manter acompanhamento médico regular',\n      'Avaliar alimentação e estilo de vida',\n      'Considerar exames complementares específicos para melhor diagnóstico'\n    ],\n    riskFactors: [\n      'Histórico familiar de condições semelhantes',\n      'Estilo de vida sedentário'\n    ]\n  };\n};\n\n// Exportar a função apropriada com base em se temos uma chave de API disponível\nexport default process.env.NEXT_PUBLIC_OPENAI_API_KEY \n  ? generateExamAnalysis \n  : generateExamAnalysisMock;\n"],"names":[],"mappings":";;;;;AAKU;AAJV;;AAEA,4BAA4B;AAC5B,MAAM,SAAS,IAAI,mJAAA,CAAA,SAAM,CAAC;IACxB,QAAQ,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI;IAClD,yBAAyB;AAC3B;AAyBO,MAAM,uBAAuB,OAClC,MACA;IAEA,IAAI;QACF,4BAA4B;QAC5B,eAAe;QAEf,+BAA+B;QAC/B,IAAI,SAAS;QAEb,IAAI,KAAK,WAAW,EAAE;YACpB,UAAU,CAAC,UAAU,EAAE,KAAK,WAAW,CAAC,QAAQ,IAAI,gBAAgB,EAAE,CAAC;YACvE,UAAU,CAAC,OAAO,EAAE,KAAK,WAAW,CAAC,GAAG,IAAI,gBAAgB,EAAE,CAAC;YAC/D,UAAU,CAAC,QAAQ,EAAE,KAAK,WAAW,CAAC,MAAM,IAAI,gBAAgB,IAAI,CAAC;QACvE;QAEA,oCAAoC;QACpC,IAAI,KAAK,QAAQ,EAAE;YACjB,UAAU,CAAC,oBAAoB,EAAE,KAAK,QAAQ,CAAC,IAAI,CAAC;QACtD;QAEA,2DAA2D;QAC3D,IAAI,KAAK,eAAe,EAAE;YACxB,UAAU,CAAC,uBAAuB,EAAE,KAAK,eAAe,CAAC,IAAI,CAAC;QAChE;QAEA,gDAAgD;QAChD,IAAI,KAAK,SAAS,IAAI,KAAK,SAAS,CAAC,MAAM,GAAG,GAAG;YAC/C,UAAU,CAAC,6BAA6B,EAAE,KAAK,SAAS,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC;QAC3E;QAEA,UAAU,CAAC;;;;;;8GAM+F,CAAC;QAE3G,eAAe;QAEf,mCAAmC;QACnC,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;QACjD,eAAe;QAEf,+BAA+B;QAC/B,MAAM,aAAa,MAAM,OAAO,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YACtD,UAAU;gBAAC;oBAAE,MAAM;oBAAQ,SAAS;gBAAO;aAAE;YAC7C,OAAO;YACP,iBAAiB;gBAAE,MAAM;YAAc;QACzC;QAEA,eAAe;QAEf,sBAAsB;QACtB,MAAM,kBAAkB,WAAW,OAAO,CAAC,EAAE,EAAE,SAAS,WAAW;QACnE,MAAM,SAAS,KAAK,KAAK,CAAC;QAE1B,eAAe;QAEf,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QAEjD,+CAA+C;QAC/C,OAAO;YACL,SAAS;YACT,aAAa;gBAAC;aAAwB;YACtC,iBAAiB;gBAAC;aAAgE;QACpF;IACF;AACF;AAKO,MAAM,2BAA2B,OACtC,MACA;IAEA,8BAA8B;IAC9B,eAAe;IACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,eAAe;IACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,eAAe;IACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,eAAe;IACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,eAAe;IACf,MAAM,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;IACjD,eAAe;IAEf,iCAAiC;IACjC,OAAO;QACL,SAAS,CAAC,+BAA+B,EAAE,KAAK,WAAW,EAAE,YAAY,mBAAmB,+CAA+C,EAAE,KAAK,QAAQ,GAAG,mCAAmC,KAAK,QAAQ,CAAC,SAAS,CAAC,GAAG,OAAO,QAAQ,+DAA+D;QACzS,aAAa;YACX;YACA;YACA;SACD;QACD,iBAAiB;YACf;YACA;YACA;SACD;QACD,aAAa;YACX;YACA;SACD;IACH;AACF;uCAGe,gKAAA,CAAA,UAAO,CAAC,GAAG,CAAC,0BAA0B,GACjD,uBACA","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/app/dashboard/plans/%5Bid%5D/exam-analysis/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { ArrowLeft, Save, Upload, File, X, Image, FileText, Brain } from 'lucide-react';\nimport { planAPI, fileAPI } from '@/lib/api';\nimport AIAnalysisAnimation from '@/components/AIAnalysisAnimation';\nimport AIAnalysisResult from '@/components/AIAnalysisResult';\nimport generateAIAnalysis from '@/services/aiAnalysisService';\nimport { motion } from 'framer-motion';\n\nexport default function ExamAnalysisEditPage() {\n  const router = useRouter();\n  const [planId, setPlanId] = useState<string>('');\n  const [plan, setPlan] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [error, setError] = useState('');\n  \n  // Dados do formulário\n  const [findings, setFindings] = useState('');\n  const [recommendations, setRecommendations] = useState('');\n  \n  // Estado para controlar a opção selecionada\n  const [analysisType, setAnalysisType] = useState<'text' | 'files'>('text');\n  \n  // Estado para arquivos\n  const [files, setFiles] = useState<File[]>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadError, setUploadError] = useState('');\n  const [uploadedFiles, setUploadedFiles] = useState<any[]>([]);\n  const [selectedPreviewFile, setSelectedPreviewFile] = useState<File | null>(null);\n  \n  // Estado para análise de IA\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  const [analysisProgress, setAnalysisProgress] = useState(0);\n  const [analysisResult, setAnalysisResult] = useState<any>(null);\n  const [showAIOption, setShowAIOption] = useState(false);\n  \n  // Referência para o input de arquivo\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  \n  // Extrair o ID do plano da URL\n  useEffect(() => {\n    const extractPlanIdFromUrl = () => {\n      const pathParts = window.location.pathname.split('/');\n      // O ID do plano é o antepenúltimo segmento da URL\n      // /dashboard/plans/{id}/exam-analysis\n      for (let i = 0; i < pathParts.length; i++) {\n        if (pathParts[i] === 'plans' && i + 1 < pathParts.length) {\n          return pathParts[i + 1];\n        }\n      }\n      return '';\n    };\n    \n    const extractedId = extractPlanIdFromUrl();\n    setPlanId(extractedId);\n  }, []);\n  \n  // Buscar dados do plano quando o ID estiver disponível\n  useEffect(() => {\n    if (planId) {\n      fetchPlan();\n    }\n  }, [planId]);\n  \n  const fetchPlan = async () => {\n    if (!planId) {\n      setError('ID do plano inválido');\n      setIsLoading(false);\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      const response = await planAPI.getPlanById(planId);\n      \n      // Processar a resposta\n      let planData;\n      if (response.data.data && response.data.data.plan) {\n        planData = response.data.data.plan;\n      } else if (response.data.data) {\n        planData = response.data.data;\n      } else {\n        planData = response.data;\n      }\n      \n      setPlan(planData);\n      \n      // Inicializar campos do formulário com dados existentes\n      if (planData.examAnalysis) {\n        setFindings(planData.examAnalysis.findings || '');\n        setRecommendations(planData.examAnalysis.recommendations || '');\n      }\n    } catch (error) {\n      console.error('Erro ao buscar dados do plano:', error);\n      setError('Erro ao carregar os dados do plano. Tente novamente.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const newFiles = Array.from(e.target.files);\n      setFiles(prev => [...prev, ...newFiles]);\n      \n      // Limpar o input para permitir selecionar os mesmos arquivos novamente\n      if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n      }\n    }\n  };\n  \n  const removeFile = (index: number) => {\n    setFiles(prev => prev.filter((_, i) => i !== index));\n  };\n  \n  const handleFileUpload = async () => {\n    if (files.length === 0) {\n      setUploadError('Selecione pelo menos um arquivo para upload');\n      return;\n    }\n    \n    setIsUploading(true);\n    setUploadProgress(0);\n    setUploadError('');\n    \n    try {\n      // Criar FormData com os arquivos\n      const formData = new FormData();\n      files.forEach(file => {\n        formData.append('files', file);\n      });\n      formData.append('planId', planId);\n      formData.append('category', 'exam');\n      \n      // Simular progresso (em uma implementação real, usar XMLHttpRequest ou fetch com Progress)\n      const interval = setInterval(() => {\n        setUploadProgress(prev => {\n          if (prev >= 95) {\n            clearInterval(interval);\n            return 95;\n          }\n          return prev + 5;\n        });\n      }, 200);\n      \n      // Enviar arquivos\n      await fileAPI.uploadFiles(formData);\n      \n      // Finalizar progresso\n      clearInterval(interval);\n      setUploadProgress(100);\n      \n      // Atualizar exame\n      const updateData = {\n        examAnalysis: {\n          findings: `Arquivos anexados em ${new Date().toLocaleDateString()}`,\n          recommendations: recommendations || 'Revisar os arquivos anexados para recomendações'\n        },\n        hasAttachments: true,\n        changeDescription: 'Upload de arquivos de exames'\n      };\n      \n      await planAPI.updatePlan(planId, updateData);\n      \n      // Mostrar mensagem de sucesso mas NÃO redirecionar\n      setUploadedFiles(prev => [...prev, ...files]);\n      setFiles([]);\n      alert('Arquivos de exames enviados com sucesso!');\n    } catch (error) {\n      console.error('Erro ao fazer upload dos arquivos:', error);\n      setUploadError('Ocorreu um erro ao enviar os arquivos. Tente novamente.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  \n  const runAIAnalysis = async () => {\n    if (!plan || !plan.patientData) {\n      alert('Dados do paciente não disponíveis para análise.');\n      return;\n    }\n    \n    setIsAnalyzing(true);\n    setAnalysisProgress(0);\n    \n    try {\n      // Preparar dados para análise\n      const analysisData = {\n        findings,\n        recommendations,\n        fileNames: files.map(f => f.name),\n        patientInfo: {\n          fullName: plan.patientData.fullName,\n          age: plan.patientData.birthdate ? calculateAge(new Date(plan.patientData.birthdate)) : undefined,\n          gender: plan.patientData.gender\n        }\n      };\n      \n      // Executar análise\n      const result = await generateAIAnalysis(analysisData, (progress) => {\n        setAnalysisProgress(progress);\n      });\n      \n      setAnalysisResult(result);\n      \n      // Atualizar o campo de achados com o resumo se estiver vazio\n      if (!findings || findings.trim().length === 0) {\n        setFindings(result.summary);\n      }\n      \n      // Atualizar o campo de recomendações se estiver vazio\n      if (!recommendations || recommendations.trim().length === 0) {\n        setRecommendations(result.recommendations.join('\\n\\n'));\n      }\n      \n    } catch (error) {\n      console.error('Erro na análise por IA:', error);\n      alert('Não foi possível completar a análise por IA. Tente novamente mais tarde.');\n    } finally {\n      setIsAnalyzing(false);\n    }\n  };\n  \n  // Função para calcular idade\n  const calculateAge = (birthdate: Date) => {\n    const today = new Date();\n    let age = today.getFullYear() - birthdate.getFullYear();\n    const monthDiff = today.getMonth() - birthdate.getMonth();\n    \n    if (monthDiff < 0 || (monthDiff === 0 && today.getDate() < birthdate.getDate())) {\n      age--;\n    }\n    \n    return age;\n  };\n  \n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!planId) {\n      setError('ID do plano inválido');\n      return;\n    }\n    \n    if (analysisType === 'files') {\n      await handleFileUpload();\n      return;\n    }\n    \n    try {\n      setIsSaving(true);\n      \n      // Preparar os dados para atualização\n      const updateData = {\n        examAnalysis: {\n          findings,\n          recommendations\n        },\n        changeDescription: 'Atualização da análise de exames'\n      };\n      \n      // Enviar atualização para a API\n      await planAPI.updatePlan(planId, updateData);\n      \n      // Mostrar mensagem de sucesso e redirecionar\n      alert('Análise de exames atualizada com sucesso!');\n      router.push(`/dashboard/plans/${planId}`);\n    } catch (error) {\n      console.error('Erro ao atualizar análise de exames:', error);\n      setError('Ocorreu um erro ao salvar os dados. Tente novamente.');\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  if (isLoading) {\n    return (\n      <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-emerald-500 border-r-transparent\"></div>\n          <p className=\"mt-4 text-gray-600\">Carregando dados do plano...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <div className=\"bg-red-100 p-4 rounded-md text-red-600 mb-4\">\n            {error}\n          </div>\n          <Link href={`/dashboard/plans/${planId}`} className=\"text-emerald-600 hover:text-emerald-800\">\n            Voltar para detalhes do plano\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!plan) {\n    return (\n      <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n        <div className=\"text-center py-12\">\n          <div className=\"bg-amber-100 p-4 rounded-md text-amber-600 mb-4\">\n            Plano não encontrado\n          </div>\n          <Link href=\"/dashboard/plans\" className=\"text-emerald-600 hover:text-emerald-800\">\n            Voltar para lista de planos\n          </Link>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n      <div className=\"mb-6\">\n        <Link href={`/dashboard/plans/${planId}`} className=\"inline-flex items-center text-emerald-600 hover:text-emerald-800\">\n          <ArrowLeft size={16} className=\"mr-1\" />\n          Voltar\n        </Link>\n      </div>\n      \n      {/* Animação de análise por IA */}\n      <AIAnalysisAnimation \n        isAnalyzing={isAnalyzing}\n        progress={analysisProgress}\n        message=\"Processando análise de exames com IA...\"\n      />\n\n      <div className=\"bg-white shadow-sm rounded-lg p-6 mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6\">Editar Análise de Exames</h1>\n        \n        {/* Informações básicas do paciente */}\n        <div className=\"mb-6 bg-gray-50 p-4 rounded-md\">\n          <p className=\"text-sm text-gray-500 mb-1\">Paciente</p>\n          <p className=\"font-medium\">{plan.patientData?.fullName || 'Não informado'}</p>\n        </div>\n        \n        {/* Selector para tipo de análise */}\n        <div className=\"mb-6\">\n          <div className=\"text-sm font-medium text-gray-700 mb-2\">Escolha o tipo de análise:</div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div\n              className={`flex flex-col items-center justify-center p-4 border rounded-lg cursor-pointer transition-all ${analysisType === 'text' ? 'border-emerald-500 bg-emerald-50' : 'border-gray-300 hover:border-emerald-300'}`}\n              onClick={() => setAnalysisType('text')}\n            >\n              <FileText size={32} className={`mb-2 ${analysisType === 'text' ? 'text-emerald-500' : 'text-gray-400'}`} />\n              <h3 className=\"font-medium\">Resumo em Texto</h3>\n              <p className=\"text-xs text-center text-gray-500 mt-1\">Descreva os achados e recomendações em formato de texto</p>\n            </div>\n            \n            <div\n              className={`flex flex-col items-center justify-center p-4 border rounded-lg cursor-pointer transition-all ${analysisType === 'files' ? 'border-emerald-500 bg-emerald-50' : 'border-gray-300 hover:border-emerald-300'}`}\n              onClick={() => setAnalysisType('files')}\n            >\n              <Image size={32} className={`mb-2 ${analysisType === 'files' ? 'text-emerald-500' : 'text-gray-400'}`} />\n              <h3 className=\"font-medium\">Arquivos de Exames</h3>\n              <p className=\"text-xs text-center text-gray-500 mt-1\">Faça upload de PDFs e imagens dos resultados de exames</p>\n            </div>\n          </div>\n\n          {/* Botão de ajuda IA */}\n          <motion.div \n            initial={{ opacity: 0, y: 10 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n            className=\"mt-4 bg-gradient-to-r from-blue-50 to-indigo-50 p-3 rounded-lg border border-blue-100\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"p-2 bg-blue-100 rounded-full mr-3\">\n                <Brain size={20} className=\"text-blue-600\" />\n              </div>\n              <div>\n                <h4 className=\"font-medium text-blue-800 text-sm\">Assistente de IA disponível</h4>\n                <p className=\"text-xs text-blue-600\">Gerar análise automatizada com base nos dados fornecidos</p>\n              </div>\n              <button\n                type=\"button\"\n                onClick={() => setShowAIOption(!showAIOption)}\n                className=\"ml-auto bg-blue-100 hover:bg-blue-200 text-blue-700 text-xs px-3 py-1 rounded-full transition-colors\"\n              >\n                {showAIOption ? 'Ocultar' : 'Mostrar Opções'}\n              </button>\n            </div>\n\n            {showAIOption && (\n              <motion.div \n                initial={{ opacity: 0, height: 0 }}\n                animate={{ opacity: 1, height: 'auto' }}\n                exit={{ opacity: 0, height: 0 }}\n                className=\"mt-3 bg-white p-3 rounded-md border border-blue-100\"\n              >\n                <p className=\"text-sm text-gray-600 mb-3\">\n                  Nosso assistente de IA pode analisar os dados fornecidos e gerar um resumo detalhado \n                  com achados principais e recomendações baseadas nos dados disponíveis.\n                </p>\n                <button\n                  type=\"button\"\n                  onClick={runAIAnalysis}\n                  disabled={isAnalyzing}\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium flex items-center justify-center w-full\"\n                >\n                  {isAnalyzing ? 'Analisando...' : 'Gerar Análise com IA'}\n                </button>\n              </motion.div>\n            )}\n          </motion.div>\n        </div>\n        \n        {/* Resultado da análise por IA */}\n        {analysisResult && !isAnalyzing && (\n          <AIAnalysisResult result={analysisResult} />\n        )}\n\n        <form onSubmit={handleSubmit}>\n          <div className=\"space-y-6\">\n            {analysisType === 'text' ? (\n              <>\n                {/* Campo de Achados */}\n                <div>\n                  <label htmlFor=\"findings\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Achados\n                  </label>\n                  <textarea\n                    id=\"findings\"\n                    name=\"findings\"\n                    rows={6}\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\"\n                    placeholder=\"Descreva os achados significativos dos exames...\"\n                    value={findings}\n                    onChange={(e) => setFindings(e.target.value)}\n                  />\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Registre os principais achados, anomalias ou pontos relevantes identificados nos exames.\n                  </p>\n                </div>\n                \n                {/* Campo de Recomendações */}\n                <div>\n                  <label htmlFor=\"recommendations\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Recomendações\n                  </label>\n                  <textarea\n                    id=\"recommendations\"\n                    name=\"recommendations\"\n                    rows={6}\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\"\n                    placeholder=\"Insira recomendações baseadas nos exames...\"\n                    value={recommendations}\n                    onChange={(e) => setRecommendations(e.target.value)}\n                  />\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Inclua recomendações específicas para o paciente com base nos resultados dos exames.\n                  </p>\n                </div>\n              </>\n            ) : (\n              <>\n                {/* Upload de arquivos */}\n                <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center\">\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    className=\"hidden\"\n                    onChange={handleFileChange}\n                    multiple\n                    accept=\".pdf,.jpg,.jpeg,.png\"\n                  />\n                  \n                  <div className=\"space-y-2\">\n                    <Upload size={32} className=\"mx-auto text-gray-400\" />\n                    <h3 className=\"text-sm font-medium text-gray-900\">Arraste e solte arquivos ou</h3>\n                    <button\n                      type=\"button\"\n                      className=\"inline-flex items-center px-3 py-1.5 border border-transparent text-xs font-medium rounded-md shadow-sm text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n                      onClick={() => fileInputRef.current?.click()}\n                    >\n                      Selecionar arquivos\n                    </button>\n                    <p className=\"text-xs text-gray-500\">PDF, JPG ou PNG (máx. 10MB por arquivo)</p>\n                  </div>\n                  \n                  {uploadError && (\n                    <div className=\"mt-3 text-sm text-red-600\">\n                      {uploadError}\n                    </div>\n                  )}\n                  \n                  {isUploading && (\n                    <div className=\"mt-4\">\n                      <div className=\"w-full h-2 bg-gray-200 rounded-full\">\n                        <div \n                          className=\"h-2 bg-emerald-600 rounded-full transition-all\" \n                          style={{ width: `${uploadProgress}%` }}\n                        ></div>\n                      </div>\n                      <p className=\"mt-1 text-xs text-gray-500\">{uploadProgress}% concluído</p>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Lista de arquivos selecionados com prévia */}\n                {files.length > 0 && (\n                  <div className=\"mt-6\">\n                    <h3 className=\"font-medium text-sm mb-2\">Arquivos selecionados ({files.length})</h3>\n                    \n                    <div className=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-4\">\n                      {/* Lista de arquivos */}\n                      <div className=\"w-full md:w-1/3\">\n                        <ul className=\"space-y-2 bg-gray-50 p-3 rounded-lg border border-gray-200 h-full max-h-[400px] overflow-y-auto\">\n                          {files.map((file, index) => (\n                            <li \n                              key={index} \n                              className={`flex justify-between items-center p-2 rounded cursor-pointer transition-colors ${selectedPreviewFile === file ? 'bg-emerald-50 border border-emerald-200' : 'bg-white border border-gray-200 hover:bg-gray-100'}`}\n                              onClick={() => setSelectedPreviewFile(file)}\n                            >\n                              <div className=\"flex items-center flex-1 min-w-0\">\n                                <File size={16} className=\"text-gray-500 mr-2 flex-shrink-0\" />\n                                <span className=\"text-sm truncate\">{file.name}</span>\n                                <span className=\"ml-2 text-xs text-gray-500 flex-shrink-0\">({(file.size / 1024 / 1024).toFixed(2)} MB)</span>\n                              </div>\n                              <button \n                                type=\"button\" \n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  removeFile(index);\n                                  if (selectedPreviewFile === file) {\n                                    setSelectedPreviewFile(null);\n                                  }\n                                }}\n                                className=\"text-gray-400 hover:text-red-500 ml-2 flex-shrink-0\"\n                              >\n                                <X size={16} />\n                              </button>\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      {/* Prévia do arquivo */}\n                      <div className=\"w-full md:w-2/3 bg-gray-50 rounded-lg border border-gray-200 min-h-[400px] flex items-center justify-center\">\n                        {selectedPreviewFile ? (\n                          <div className=\"w-full h-full p-4 overflow-hidden\">\n                            {selectedPreviewFile.type.startsWith('image/') ? (\n                              <img \n                                src={URL.createObjectURL(selectedPreviewFile)} \n                                alt={selectedPreviewFile.name}\n                                className=\"max-w-full max-h-[380px] object-contain mx-auto\"\n                              />\n                            ) : selectedPreviewFile.type === 'application/pdf' ? (\n                              <div className=\"w-full h-full flex flex-col items-center\">\n                                <div className=\"bg-white p-3 rounded-md border border-gray-300 shadow-sm\">\n                                  <File size={48} className=\"text-red-500 mx-auto\" />\n                                  <p className=\"text-sm text-center mt-2 font-medium\">{selectedPreviewFile.name}</p>\n                                </div>\n                                <p className=\"text-sm text-gray-500 mt-4\">PDFs podem ser visualizados após o envio através da interface do sistema.</p>\n                                <a \n                                  href={URL.createObjectURL(selectedPreviewFile)} \n                                  target=\"_blank\" \n                                  rel=\"noopener noreferrer\"\n                                  className=\"mt-3 px-4 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 transition-colors\"\n                                >\n                                  Abrir PDF em nova janela\n                                </a>\n                              </div>\n                            ) : (\n                              <div className=\"text-center p-6\">\n                                <File size={48} className=\"text-gray-400 mx-auto\" />\n                                <p className=\"text-gray-600 mt-4\">Tipo de arquivo não suportado para prévia</p>\n                                <p className=\"text-sm text-gray-500 mt-1\">{selectedPreviewFile.name}</p>\n                              </div>\n                            )}\n                          </div>\n                        ) : (\n                          <div className=\"text-center p-6\">\n                            <File size={48} className=\"text-gray-300 mx-auto\" />\n                            <p className=\"text-gray-500 mt-4\">Selecione um arquivo para visualizar</p>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Lista de arquivos enviados com sucesso */}\n                {uploadedFiles.length > 0 && (\n                  <div className=\"mt-6\">\n                    <h3 className=\"font-medium text-sm mb-2 text-emerald-700\">Arquivos enviados com sucesso ({uploadedFiles.length})</h3>\n                    <ul className=\"space-y-2 bg-emerald-50 p-3 rounded-lg border border-emerald-200\">\n                      {uploadedFiles.map((file, index) => (\n                        <li key={index} className=\"flex items-center p-2 bg-white rounded border border-emerald-100\">\n                          <File size={16} className=\"text-emerald-500 mr-2\" />\n                          <span className=\"text-sm\">{file.name}</span>\n                          <span className=\"ml-auto text-xs text-emerald-600 bg-emerald-50 px-2 py-1 rounded-full\">✓ Enviado</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n                \n                {/* Campo de Recomendações opcional para uploads */}\n                <div>\n                  <label htmlFor=\"recommendations\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Recomendações (opcional)\n                  </label>\n                  <textarea\n                    id=\"recommendations\"\n                    name=\"recommendations\"\n                    rows={4}\n                    className=\"w-full rounded-md border-gray-300 shadow-sm focus:border-emerald-500 focus:ring-emerald-500\"\n                    placeholder=\"Inclua recomendações baseadas nos exames (opcional)...\"\n                    value={recommendations}\n                    onChange={(e) => setRecommendations(e.target.value)}\n                  />\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Opcionalmente, adicione algumas recomendações junto com os arquivos.\n                  </p>\n                </div>\n              </>\n            )}\n            \n            {/* Botões de ação */}\n            <div className=\"flex justify-end space-x-3 pt-4\">\n              <Link\n                href={`/dashboard/plans/${planId}`}\n                className=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n              >\n                Cancelar\n              </Link>\n              <button\n                type=\"submit\"\n                disabled={isSaving}\n                className={`inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 ${isSaving ? 'opacity-70 cursor-not-allowed' : ''}`}\n              >\n                {isSaving || isUploading ? (\n                  <>\n                    <div className=\"h-4 w-4 mr-2 animate-spin rounded-full border-2 border-solid border-white border-r-transparent\"></div>\n                    {isUploading ? 'Enviando arquivos...' : 'Salvando...'}\n                  </>\n                ) : (\n                  <>\n                    <Save size={16} className=\"mr-2\" />\n                    {analysisType === 'files' ? 'Enviar Arquivos' : 'Salvar Análise'}\n                  </>\n                )}\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}