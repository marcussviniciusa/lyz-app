{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/app/dashboard/plans/%5Bid%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { \n  ArrowLeft, \n  Edit, \n  Share2, \n  Archive, \n  Download, \n  Trash, \n  FileText,\n  ClipboardList,\n  Upload,\n  ChevronDown,\n  Clock\n} from 'lucide-react';\nimport { planAPI } from '@/lib/api';\n\n// Tipos para planos e seções - alinhados com o modelo do backend\ninterface PatientData {\n  fullName: string;\n  birthDate: Date;\n  profession: string;\n  mainReason: string;\n  initialObservations?: string;\n}\n\ninterface IPlanContent {\n  caseSummary?: string;\n  symptomCorrelations?: string;\n  generalNutritionalPlan?: string;\n  recommendedSupplements?: string;\n  lifestyleGuidelines?: string;\n}\n\ninterface IIFMSystem {\n  systems?: Array<{\n    id: string;\n    name: string;\n    priority: 'high' | 'medium' | 'low';\n    findings?: string;\n    interventions?: string;\n  }>;\n  lastUpdated?: Date;\n  assimilation?: {\n    antecedents?: string;\n    triggers?: string;\n    mediators?: string;\n  };\n  defense?: {\n    antecedents?: string;\n    triggers?: string;\n    mediators?: string;\n  };\n  energy?: {\n    antecedents?: string;\n    triggers?: string;\n    mediators?: string;\n  };\n}\n\ninterface Plan {\n  _id: string;\n  creator: any;\n  company: any;\n  professionType: string;\n  status: 'draft' | 'in_progress' | 'completed' | 'archived';\n  patientData: PatientData;\n  createdAt: string;\n  updatedAt: string;\n  sharedLink?: string;\n  sharingLink?: string;\n  sharedLinkExpiry?: Date;\n  examAnalysis?: {\n    findings?: string;\n    recommendations?: string;\n  };\n  exams?: Array<any>;\n  tcmObservations?: any;\n  ifmMatrix?: IIFMSystem;\n  planContent?: IPlanContent;\n}\n\ntype SectionNames = 'patientInfo' | 'examResults' | 'tcmObservations' | 'ifmMatrix' | 'ifmAnalysis' | 'recommendations';\n\nexport default function PlanDetailPage() {\n  const router = useRouter();\n  const [planId, setPlanId] = useState<string>('');\n  \n  // Usamos useEffect para extrair o ID apenas do lado do cliente\n  useEffect(() => {\n    const extractPlanIdFromUrl = () => {\n      const pathParts = window.location.pathname.split('/');\n      // O último segmento deve ser o ID\n      const idFromPath = pathParts[pathParts.length - 1];\n      if (idFromPath && idFromPath !== 'plans') {\n        return idFromPath;\n      }\n      return '';\n    };\n    \n    const extractedId = extractPlanIdFromUrl();\n    setPlanId(extractedId);\n  }, []);\n  \n  // useEffect para buscar os dados do plano quando o ID estiver disponível\n  useEffect(() => {\n    if (planId) {\n      console.log('Buscando plano com ID:', planId);\n      fetchPlan();\n    }\n  }, [planId]);\n  \n  const [plan, setPlan] = useState<Plan | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSharingLoading, setIsSharingLoading] = useState(false);\n  const [isArchiveLoading, setIsArchiveLoading] = useState(false);\n  const [isDeleteLoading, setIsDeleteLoading] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [showSections, setShowSections] = useState({\n    patientInfo: true,\n    examResults: false,\n    tcmObservations: false,\n    ifmMatrix: false,\n    ifmAnalysis: false,\n    recommendations: false\n  });\n\n  const fetchPlan = async () => {\n    // Verifica se temos um ID válido antes de fazer a requisição\n    if (!planId || planId.trim() === '') {\n      setError('ID do plano inválido ou não encontrado');\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      // Inclui tratamento para requisição com timeout\n      const response = await Promise.race([\n        planAPI.getPlanById(planId),\n        new Promise<never>((_, reject) => \n          setTimeout(() => reject(new Error('Timeout ao buscar detalhes do plano')), 10000)\n        )\n      ]);\n      \n      // Verifica se temos dados válidos na resposta\n      if (response && response.data) {\n        // A API pode retornar dados em diferentes formatos, vamos garantir que processamos corretamente\n        if (response.data.data && response.data.data.plan) {\n          console.log('Dados do plano recebidos (formato 1):', response.data.data.plan);\n          setPlan(response.data.data.plan);\n        } else if (response.data.data) {\n          console.log('Dados do plano recebidos (formato 2):', response.data.data);\n          setPlan(response.data.data);\n        } else {\n          console.log('Dados do plano recebidos (formato 3):', response.data);\n          setPlan(response.data);\n        }\n      } else {\n        throw new Error('Dados do plano não encontrados na resposta');\n      }\n    } catch (error: any) {\n      console.error('Failed to fetch plan:', error);\n      // Mensagens de erro mais específicas baseadas no tipo de erro\n      if (error.response && error.response.status === 400) {\n        setError('ID do plano inválido. Verifique se a URL está correta.');\n      } else if (error.response && error.response.status === 404) {\n        setError('Plano não encontrado.');\n      } else if (error.response && error.response.status === 403) {\n        setError('Você não tem permissão para acessar este plano.');\n      } else if (error.message === 'Timeout ao buscar detalhes do plano') {\n        setError('A operação excedeu o tempo limite. Tente novamente.');\n      } else {\n        setError('Erro ao carregar detalhes do plano. Tente novamente.');\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (planId) {\n      fetchPlan();\n    }\n  }, [planId]);\n\n  const handleSharePlan = async () => {\n    try {\n      setIsSharingLoading(true);\n      const response = await planAPI.generateSharingLink(planId);\n      const shareUrl = `${window.location.origin}/shared-plan/${response.data.data.token}`;\n      \n      // Copy to clipboard\n      navigator.clipboard.writeText(shareUrl)\n        .then(() => {\n          alert('Link copiado para a área de transferência!');\n          fetchPlan(); // Refresh to show link status\n        })\n        .catch(err => {\n          console.error('Failed to copy link:', err);\n          alert('Link gerado, mas não foi possível copiá-lo automaticamente.');\n          fetchPlan(); // Refresh to show link status\n        });\n    } catch (error) {\n      console.error('Failed to generate sharing link:', error);\n      alert('Falha ao gerar link de compartilhamento.');\n    } finally {\n      setIsSharingLoading(false);\n    }\n  };\n\n  const handleArchivePlan = async () => {\n    if (!confirm('Tem certeza que deseja arquivar este plano? Essa ação não pode ser desfeita diretamente.')) {\n      return;\n    }\n    \n    try {\n      setIsArchiveLoading(true);\n      await planAPI.archivePlan(planId);\n      alert('Plano arquivado com sucesso!');\n      fetchPlan(); // Refresh to show updated status\n    } catch (error) {\n      console.error('Failed to archive plan:', error);\n      alert('Erro ao arquivar o plano. Tente novamente.');\n    } finally {\n      setIsArchiveLoading(false);\n    }\n  };\n\n  const handleDeletePlan = async () => {\n    try {\n      setIsDeleteLoading(true);\n      await planAPI.deletePlan(planId);\n      alert('Plano excluído com sucesso!');\n      router.push('/dashboard/plans'); // Redirecionar para a lista de planos\n    } catch (error: any) {\n      console.error('Erro ao excluir plano:', error);\n      alert(error.response?.data?.message || 'Erro ao excluir o plano. Tente novamente.');\n    } finally {\n      setIsDeleteLoading(false);\n      setShowDeleteConfirm(false);\n    }\n  };\n  \n  const toggleSection = (section: SectionNames) => {\n    setShowSections({\n      ...showSections,\n      [section]: !showSections[section]\n    });\n  };\n\n  // Loading state\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center\">\n          <Link href=\"/dashboard/plans\" className=\"mr-4\">\n            <ArrowLeft size={20} className=\"text-gray-500\" />\n          </Link>\n          <div className=\"w-1/3 h-8 bg-gray-200 rounded animate-pulse\"></div>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"space-y-4\">\n            {[...Array(4)].map((_, index) => (\n              <div key={index} className=\"p-4 border border-gray-200 rounded-lg\">\n                <div className=\"w-1/3 h-5 bg-gray-200 rounded animate-pulse mb-2\"></div>\n                <div className=\"w-1/2 h-4 bg-gray-200 rounded animate-pulse\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Error state\n  if (error) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center\">\n          <Link href=\"/dashboard/plans\" className=\"mr-4\">\n            <ArrowLeft size={20} className=\"text-gray-500\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Erro</h1>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n          <div className=\"p-4 bg-red-50 border border-red-200 rounded-md\">\n            <p className=\"text-red-700\">{error}</p>\n          </div>\n          <div className=\"mt-4\">\n            <button\n              onClick={() => window.location.reload()}\n              className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n            >\n              Tentar Novamente\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Empty state (no plan found)\n  if (!plan) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center\">\n          <Link href=\"/dashboard/plans\" className=\"mr-4\">\n            <ArrowLeft size={20} className=\"text-gray-500\" />\n          </Link>\n          <h1 className=\"text-2xl font-bold text-gray-900\">Plano não encontrado</h1>\n        </div>\n        \n        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200 text-center py-12\">\n          <FileText size={48} className=\"mx-auto text-gray-400 mb-4\" />\n          <h2 className=\"text-xl font-medium text-gray-700 mb-2\">Plano não encontrado</h2>\n          <p className=\"text-gray-500 mb-6\">O plano que você está procurando não foi encontrado ou pode ter sido excluído.</p>\n          <Link\n            href=\"/dashboard/plans\"\n            className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n          >\n            Voltar para Planos\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  // Status label and color mapping\n  const statusLabels = {\n    draft: 'Rascunho',\n    in_progress: 'Em Progresso',\n    completed: 'Concluído',\n    archived: 'Arquivado'\n  };\n\n  const statusClasses = {\n    draft: 'bg-blue-100 text-blue-800',\n    in_progress: 'bg-yellow-100 text-yellow-800',\n    completed: 'bg-green-100 text-green-800',\n    archived: 'bg-gray-100 text-gray-800'\n  };\n\n  const isArchived = plan.status === 'archived';\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col md:flex-row md:items-center md:justify-between\">\n        <div className=\"flex items-center\">\n          <Link href=\"/dashboard/plans\" className=\"mr-4\">\n            <ArrowLeft size={20} className=\"text-gray-500\" />\n          </Link>\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">{plan.patientData?.fullName || 'Sem nome'}</h1>\n            <div className=\"flex items-center mt-1\">\n              <span className={`inline-flex px-2 py-1 text-xs font-medium rounded-full ${statusClasses[plan.status as keyof typeof statusClasses] || 'bg-gray-100 text-gray-800'}`}>\n                {statusLabels[plan.status as keyof typeof statusLabels] || 'Desconhecido'}\n              </span>\n              {plan.sharingLink && (\n                <span className=\"ml-2 inline-flex px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800\">\n                  Compartilhado\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 mt-4 md:mt-0\">\n          {!isArchived && (\n            <Link\n              href={`/dashboard/plans/${planId}/edit`}\n              className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n            >\n              <Edit size={16} className=\"mr-2\" />\n              Editar\n            </Link>\n          )}\n          \n          <button\n            onClick={handleSharePlan}\n            disabled={isSharingLoading}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n          >\n            <Share2 size={16} className=\"mr-2\" />\n            {isSharingLoading ? 'Compartilhando...' : 'Compartilhar'}\n          </button>\n          \n          {(plan.status === 'draft' || plan.status === 'in_progress') && (\n            <button\n              onClick={handleArchivePlan}\n              disabled={isArchiveLoading}\n              className={`inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500 ${isArchiveLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              <Archive size={16} className=\"mr-2\" />\n              {isArchiveLoading ? 'Arquivando...' : 'Arquivar'}\n            </button>\n          )}\n          \n          <button\n            onClick={() => setShowDeleteConfirm(true)}\n            className=\"inline-flex items-center px-3 py-2 border border-red-300 shadow-sm text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n          >\n            <Trash size={16} className=\"mr-2\" />\n            Excluir\n          </button>\n          \n          <Link\n            href={`/dashboard/plans/${planId}/pdf`}\n            className=\"inline-flex items-center px-3 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n          >\n            <Download size={16} className=\"mr-2\" />\n            Exportar\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Main content */}\n        <div className=\"lg:col-span-2 space-y-6\">\n          {/* Patient information section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <button\n              onClick={() => toggleSection('patientInfo')}\n              className=\"flex items-center justify-between w-full text-left\"\n            >\n              <h2 className=\"text-lg font-medium text-gray-900\">Informações do Paciente</h2>\n              <ChevronDown\n                size={20}\n                className={`text-gray-500 transform transition-transform ${\n                  showSections.patientInfo ? 'rotate-180' : ''\n                }`}\n              />\n            </button>\n            \n            {showSections.patientInfo && (\n              <div className=\"mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Nome</p>\n                    <p className=\"mt-1\">{plan.patientData?.fullName || 'Não informado'}</p>\n                  </div>\n                  \n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Data de Nascimento</p>\n                    <p className=\"mt-1\">\n                      <span className=\"text-gray-600\">\n                        {plan.patientData?.birthDate && !isNaN(new Date(plan.patientData.birthDate).getTime()) ? \n                          new Date(plan.patientData.birthDate).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric' }) : \n                          'Desconhecido'}\n                      </span>\n                    </p>\n                  </div>\n                  \n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Profissão</label>\n                    <p className=\"mt-1\">{plan.patientData?.profession || 'Não informado'}</p>\n                  </div>\n                  \n                  <div>\n                    <label className=\"text-sm font-medium text-gray-700\">Motivo Principal</label>\n                    <p className=\"mt-1\">{plan.patientData?.mainReason || 'Não informado'}</p>\n                  </div>\n                </div>\n                \n                {plan.patientData?.initialObservations && (\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-500\">Observações Iniciais</p>\n                    <p className=\"mt-1 whitespace-pre-line\">{plan.patientData.initialObservations}</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Exam Results Analysis section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <button\n              onClick={() => toggleSection('examResults')}\n              className=\"flex items-center justify-between w-full text-left\"\n            >\n              <h2 className=\"text-lg font-medium text-gray-900\">Análise de Exames</h2>\n              <ChevronDown\n                size={20}\n                className={`text-gray-500 transform transition-transform ${\n                  showSections.examResults ? 'rotate-180' : ''\n                }`}\n              />\n            </button>\n            \n            {showSections.examResults && (\n              <div className=\"mt-4\">\n                {(plan.examAnalysis || plan.tcmObservations) ? (\n                  <div className=\"space-y-6\">\n                    {plan.tcmObservations && (\n                      <div className=\"space-y-4\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-500\">Observações Gerais</p>\n                          <p className=\"mt-1 whitespace-pre-line\">{plan.tcmObservations.general || 'Nenhuma observação registrada'}</p>\n                        </div>\n                      </div>\n                    )}\n                    {plan.examAnalysis && (\n                      <div className=\"space-y-4\">\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-500\">Achados</p>\n                          <p className=\"mt-1 whitespace-pre-line\">{plan.examAnalysis.findings || 'Nenhum achado registrado.'}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm font-medium text-gray-500\">Recomendações</p>\n                          <p className=\"mt-1 whitespace-pre-line\">{plan.examAnalysis.recommendations || 'Nenhuma recomendação registrada.'}</p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"text-center py-6\">\n                    <ClipboardList size={48} className=\"mx-auto text-gray-400 mb-4\" />\n                    <p className=\"text-gray-500\">Nenhuma análise de exames disponível</p>\n                    {!isArchived && (\n                      <Link \n                        href={`/dashboard/plans/${planId}/exam-analysis`}\n                        className=\"text-blue-600 hover:text-blue-800 mt-2 inline-block font-medium\"\n                      >\n                        Adicionar análise\n                      </Link>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* IFM Matrix section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <button\n              onClick={() => toggleSection('ifmMatrix')}\n              className=\"flex items-center justify-between w-full text-left\"\n            >\n              <h2 className=\"text-lg font-medium text-gray-900\">Matriz do Instituto de Medicina Funcional</h2>\n              <ChevronDown\n                size={20}\n                className={`text-gray-500 transform transition-transform ${\n                  showSections.ifmMatrix ? 'rotate-180' : ''\n                }`}\n              />\n            </button>\n            \n            {showSections.ifmMatrix && (\n              <div className=\"mt-4\">\n                {plan.ifmMatrix ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Status da Matriz</p>\n                      <p className=\"mt-1 text-gray-700\">Última atualização: {plan.ifmMatrix.lastUpdated ? new Date(plan.ifmMatrix.lastUpdated).toLocaleDateString('pt-BR') : 'Nunca'}</p>\n                    </div>\n                    \n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Sistemas Prioritários</p>\n                      <div className=\"mt-1 flex flex-wrap gap-2\">\n                        {plan.ifmMatrix.systems && plan.ifmMatrix.systems\n                          .filter(system => system.priority === 'high')\n                          .map(system => (\n                            <span key={system.id} className=\"px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800\">\n                              {system.name}\n                            </span>\n                          ))}\n                        {(!plan.ifmMatrix.systems || plan.ifmMatrix.systems.filter(system => system.priority === 'high').length === 0) && (\n                          <span className=\"text-gray-500\">Nenhum sistema com alta prioridade</span>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex justify-end\">\n                      <Link\n                        href={`/dashboard/plans/${planId}/ifm-matrix`}\n                        className=\"inline-flex items-center px-3 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n                      >\n                        <FileText size={16} className=\"mr-2\" />\n                        Ver Matriz Completa\n                      </Link>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-6\">\n                    <ClipboardList size={48} className=\"mx-auto text-gray-400 mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Matriz IFM não preenchida</h3>\n                    <p className=\"text-gray-500 mb-6\">Preencha a matriz do Instituto de Medicina Funcional para identificar prioridades terapêuticas.</p>\n                    {!isArchived && (\n                      <Link\n                        href={`/dashboard/plans/${planId}/ifm-matrix`}\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n                      >\n                        <FileText size={16} className=\"mr-2\" />\n                        Preencher Matriz IFM\n                      </Link>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n\n          {/* Plan Recommendations section */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <button\n              onClick={() => toggleSection('recommendations')}\n              className=\"flex items-center justify-between w-full text-left\"\n            >\n              <h2 className=\"text-lg font-medium text-gray-900\">Recomendações e Plano</h2>\n              <ChevronDown\n                size={20}\n                className={`text-gray-500 transform transition-transform ${\n                  showSections.recommendations ? 'rotate-180' : ''\n                }`}\n              />\n            </button>\n            \n            {showSections.recommendations && (\n              <div className=\"mt-4\">\n                {plan.planContent ? (\n                  <div className=\"space-y-4\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Plano Terapêutico</p>\n                      <div className=\"mt-4 prose\">\n                        {plan.planContent.caseSummary && (\n                          <div dangerouslySetInnerHTML={{ __html: plan.planContent.caseSummary }} />\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Correlações de Sintomas</p>\n                      <div className=\"mt-1 prose prose-emerald prose-sm max-w-none\">\n                        {plan.planContent.symptomCorrelations && (\n                          <div dangerouslySetInnerHTML={{ __html: plan.planContent.symptomCorrelations }} />\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div>\n                      <p className=\"text-sm font-medium text-gray-500\">Orientações de Estilo de Vida</p>\n                      <div className=\"mt-1 prose prose-emerald prose-sm max-w-none\">\n                        {plan.planContent.lifestyleGuidelines && (\n                          <div dangerouslySetInnerHTML={{ __html: plan.planContent.lifestyleGuidelines }} />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"text-center py-6\">\n                    <FileText size={48} className=\"mx-auto text-gray-400 mb-4\" />\n                    <h3 className=\"text-lg font-medium text-gray-700 mb-2\">Nenhuma recomendação disponível</h3>\n                    <p className=\"text-gray-500 mb-6\">Gere recomendações personalizadas baseadas nas análises.</p>\n                    {!isArchived && (\n                      <Link\n                        href={`/dashboard/plans/${planId}/generate`}\n                        className=\"inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-emerald-600 hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n                      >\n                        <FileText size={16} className=\"mr-2\" />\n                        Gerar Recomendações\n                      </Link>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"space-y-6\">\n          {/* Plan details card */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Detalhes do Plano</h2>\n            \n            <div className=\"space-y-3\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">ID do Plano</p>\n                <p className=\"mt-1 text-sm text-gray-900\">{plan._id}</p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Data de Criação</p>\n                <p className=\"mt-1 text-sm text-gray-900\">\n                  {plan.createdAt ? \n                    new Date(plan.createdAt).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric' }) : \n                    'Desconhecido'}\n                </p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Última Atualização</p>\n                <p className=\"mt-1 text-sm text-gray-900\">\n                  {plan.updatedAt ? \n                    new Date(plan.updatedAt).toLocaleDateString('pt-BR', { day: '2-digit', month: '2-digit', year: 'numeric' }) : \n                    'Desconhecido'}\n                </p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Tipo de Profissional</p>\n                <p className=\"mt-1 text-sm text-gray-900\">\n                  {(() => {\n                    // Mapeamento de tipos de profissionais para nomes amigáveis\n                    switch(plan.professionType) {\n                      case 'medical_nutritionist': return 'Nutricionista';\n                      case 'medical_doctor': return 'Médico';\n                      case 'functional_medicine': return 'Medicina Funcional';\n                      case 'complementary_medicine': return 'Medicina Complementar';\n                      default: return plan.professionType || 'Não especificado';\n                    }\n                  })()}\n                </p>\n              </div>\n              \n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Status de Compartilhamento</p>\n                <p className=\"mt-1 text-sm text-gray-900\">\n                  {plan.sharedLink ? (\n                    <>\n                      <span className=\"text-green-600\">Ativo</span>\n                      {plan.sharedLinkExpiry && (\n                        <span className=\"block text-xs text-gray-500 mt-1\">\n                          Expira em: {new Date(plan.sharedLinkExpiry).toLocaleDateString('pt-BR')}\n                        </span>\n                      )}\n                    </>\n                  ) : (\n                    'Não compartilhado'\n                  )}\n                </p>\n              </div>\n              \n              <div className=\"pt-2 mt-2 border-t border-gray-100\">\n                <Link\n                  href={`/dashboard/plans/${planId}/versions`}\n                  className=\"inline-flex items-center text-sm text-emerald-600 hover:text-emerald-800\"\n                >\n                  <Clock size={16} className=\"mr-1\" />\n                  Ver histórico de versões\n                </Link>\n              </div>\n            </div>\n          </div>\n\n          {/* Documents card */}\n          <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n            <h2 className=\"text-lg font-medium text-gray-900 mb-4\">Documentos</h2>\n            \n            <Link\n              href={`/dashboard/plans/${planId}/documents`}\n              className=\"inline-flex w-full items-center justify-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-emerald-500\"\n            >\n              <FileText size={16} className=\"mr-2\" />\n              Gerenciar Documentos\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      {/* Modal de confirmação de exclusão */}\n      {showDeleteConfirm && (\n        <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg max-w-md w-full\">\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Confirmar exclusão</h2>\n            <p className=\"text-gray-700 mb-6\">\n              Tem certeza que deseja excluir permanentemente este plano? Esta ação não pode ser desfeita e todos os dados associados serão perdidos.\n            </p>\n            <div className=\"flex justify-end space-x-3\">\n              <button\n                onClick={() => setShowDeleteConfirm(false)}\n                className=\"px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n              >\n                Cancelar\n              </button>\n              <button\n                onClick={handleDeletePlan}\n                disabled={isDeleteLoading}\n                className={`px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 ${isDeleteLoading ? 'opacity-50 cursor-not-allowed' : ''}`}\n              >\n                {isDeleteLoading ? 'Excluindo...' : 'Sim, excluir plano'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}