{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/lib/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000';\n\n// Create axios instance with defaults\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle common errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    const { status } = error.response || {};\n    \n    // Handle token expiration\n    if (status === 401) {\n      localStorage.removeItem('token');\n      window.location.href = '/auth/login';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email: string, password: string) => \n    api.post('/api/auth/login', { email, password }),\n  \n  register: (name: string, email: string, password: string, company: string) => \n    api.post('/api/auth/register', { name, email, password, company }),\n  \n  forgotPassword: (email: string) => \n    api.post('/api/auth/forgot-password', { email }),\n  \n  resetPassword: (token: string, password: string) => \n    api.post('/api/auth/reset-password', { token, password }),\n  \n  changePassword: (currentPassword: string, newPassword: string) => \n    api.post('/api/auth/change-password', { currentPassword, newPassword }),\n};\n\n// User API\nexport const userAPI = {\n  getUsers: (page = 1, limit = 10, search = '') => \n    api.get(`/api/users?page=${page}&limit=${limit}&search=${search}`),\n  \n  getUserById: (id: string) => \n    api.get(`/api/users/${id}`),\n  \n  createUser: (userData: any) => \n    api.post('/api/users', userData),\n  \n  updateUser: (id: string, userData: any) => \n    api.put(`/api/users/${id}`, userData),\n  \n  deleteUser: (id: string) => \n    api.delete(`/api/users/${id}`),\n  \n  activateUser: (id: string) => \n    api.put(`/api/users/${id}/activate`),\n  \n  deactivateUser: (id: string) => \n    api.put(`/api/users/${id}/deactivate`),\n};\n\n// Company API\nexport const companyAPI = {\n  getCompanies: (page = 1, limit = 10, search = '') => \n    api.get(`/api/companies?page=${page}&limit=${limit}&search=${search}`),\n  \n  getCompanyById: (id: string) => \n    api.get(`/api/companies/${id}`),\n  \n  createCompany: (companyData: any) => \n    api.post('/api/companies', companyData),\n  \n  updateCompany: (id: string, companyData: any) => \n    api.put(`/api/companies/${id}`, companyData),\n  \n  deleteCompany: (id: string) => \n    api.delete(`/api/companies/${id}`),\n  \n  activateCompany: (id: string) => \n    api.put(`/api/companies/${id}/activate`),\n  \n  deactivateCompany: (id: string) => \n    api.put(`/api/companies/${id}/deactivate`),\n};\n\n// Plan API\nexport const planAPI = {\n  getPlans: (page = 1, limit = 10, status = '', patientName = '', startDate = '', endDate = '') => \n    api.get(`/api/plans?page=${page}&limit=${limit}&status=${status}&patientName=${patientName}&startDate=${startDate}&endDate=${endDate}`),\n  \n  getPlanById: (id: string) => \n    api.get(`/api/plans/${id}`),\n  \n  createPlan: (planData: any) => \n    api.post('/api/plans', planData),\n  \n  updatePlan: (id: string, planData: any) => \n    api.put(`/api/plans/${id}`, planData),\n  \n  deletePlan: (id: string) => \n    api.delete(`/api/plans/${id}`),\n  \n  archivePlan: (id: string) => \n    api.put(`/api/plans/${id}/archive`),\n  \n  generateSharingLink: (id: string, expiresInDays = 30) => \n    api.post(`/api/plans/${id}/share`, { expiresInDays }),\n  \n  getSharedPlan: (token: string) => \n    api.get(`/api/plans/shared/${token}`),\n    \n  // Version history endpoints\n  getPlanVersions: (planId: string) => \n    api.get(`/api/plans/${planId}/versions`),\n    \n  getPlanVersionById: (planId: string, versionId: string) => \n    api.get(`/api/plans/${planId}/versions/${versionId}`),\n    \n  comparePlanVersions: (planId: string, version1Id: string, version2Id: string) => \n    api.post(`/api/plans/${planId}/versions/compare`, { version1Id, version2Id }),\n    \n  restorePlanVersion: (planId: string, versionId: string) => \n    api.post(`/api/plans/${planId}/versions/${versionId}/restore`),\n};\n\n// AI API\nexport const aiAPI = {\n  // Análise básica com abordagem tradicional\n  analyzeExams: (planId: string, examResults: string, patientInfo: string) => \n    api.post(`/api/ai/analyze-exams`, { planId, examResults, patientInfo }),\n    \n  analyzeTCM: (planId: string, tcmObservations: string, patientInfo: string) => \n    api.post(`/api/ai/analyze-tcm`, { planId, tcmObservations, patientInfo }),\n    \n  analyzeIFM: (planId: string, patientInfo: string, labResults: string, timeline: string) => \n    api.post(`/api/ai/analyze-ifm`, { planId, patientInfo, labResults, timeline }),\n    \n  generatePlan: (planId: string, patientInfo: string, analysisSummary: string, professionalType: string) => \n    api.post(`/api/ai/generate-plan`, { planId, patientInfo, analysisSummary, professionalType }),\n    \n  // Novos endpoints baseados em agentes com contexto e memória\n  analyzeExamsWithQuery: (planId: string, examResults: string, patientInfo: string, query?: string) => \n    api.post(`/api/ai/analyze-exams-with-query`, { planId, examResults, patientInfo, query }),\n    \n  analyzeTCMWithQuery: (planId: string, tcmObservations: string, patientInfo: string, query?: string) => \n    api.post(`/api/ai/analyze-tcm-with-query`, { planId, tcmObservations, patientInfo, query }),\n    \n  analyzeIFMWithQuery: (planId: string, patientInfo: string, labResults: string, timeline: string, query?: string) => \n    api.post(`/api/ai/analyze-ifm-with-query`, { planId, patientInfo, labResults, timeline, query }),\n    \n  generatePlanWithInstructions: (planId: string, patientInfo: string, analysisSummary: string, professionalType: string, specialInstructions?: string) => \n    api.post(`/api/ai/generate-plan-with-instructions`, { planId, patientInfo, analysisSummary, professionalType, specialInstructions }),\n    \n  refinePlan: (planId: string, existingPlanContent: string, feedback: string) => \n    api.post(`/api/ai/refine-plan`, { planId, existingPlanContent, feedback }),\n    \n  getAgentContext: (planId: string, agentType: string) => \n    api.get(`/api/ai/context/${planId}/${agentType}`),\n};\n\n// File API\nexport const fileAPI = {\n  uploadFile: (file: File, planId?: string, examId?: string, category = 'general') => {\n    const formData = new FormData();\n    formData.append('file', file);\n    if (planId) formData.append('planId', planId);\n    if (examId) formData.append('examId', examId);\n    formData.append('category', category);\n    \n    return api.post('/files/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n  \n  uploadFiles: (formData: FormData) => {\n    // formData deve já conter os arquivos e outros parâmetros como planId e category\n    return api.post('/api/files/upload-multiple', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n  },\n  \n  getFile: (fileId: string) => \n    api.get(`/api/files/${fileId}`),\n  \n  deleteFile: (fileId: string) => \n    api.delete(`/api/files/${fileId}`),\n  \n  listFiles: (category?: string, planId?: string) => {\n    let url = '/api/files?';\n    if (category) url += `category=${category}&`;\n    if (planId) url += `planId=${planId}`;\n    return api.get(url);\n  },\n};\n\n// Prompt API\nexport const promptAPI = {\n  getPrompts: () => \n    api.get('/api/prompts'),\n  \n  getPromptById: (id: string) => \n    api.get(`/api/prompts/${id}`),\n  \n  createPrompt: (promptData: any) => \n    api.post('/api/prompts', promptData),\n  \n  updatePrompt: (id: string, promptData: any) => \n    api.put(`/api/prompts/${id}`, promptData),\n  \n  deletePrompt: (id: string) => \n    api.delete(`/api/prompts/${id}`),\n  \n  setPromptActive: (id: string) => \n    api.patch(`/api/prompts/${id}/activate`),\n};\n\n// Material educativo API\nexport const materialAPI = {\n  getMaterials: (page = 1, limit = 10, category = '', search = '', tags = '', status = '') => \n    api.get(`/api/materials?page=${page}&limit=${limit}&category=${category}&search=${search}&tags=${tags}&status=${status}`),\n  \n  getMaterialById: (id: string) => \n    api.get(`/api/materials/${id}`),\n  \n  uploadMaterial: (formData: FormData) => \n    api.post('/api/materials/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }),\n  \n  updateMaterial: (id: string, materialData: any) => \n    api.patch(`/api/materials/${id}`, materialData),\n  \n  deleteMaterial: (id: string) => \n    api.delete(`/api/materials/${id}`),\n  \n  searchMaterials: (query: string, categories?: string[], tags?: string[]) => \n    api.post('/api/materials/search', {\n      query,\n      categories: categories && categories.length > 0 ? categories.join(',') : undefined,\n      tags: tags && tags.length > 0 ? tags.join(',') : undefined\n    }),\n  \n  getMaterialChunks: (id: string) => \n    api.get(`/api/materials/${id}/chunks`),\n  \n  reprocessMaterial: (id: string) => \n    api.post(`/api/materials/${id}/reprocess`),\n};\n\n// Admin API\nexport const adminAPI = {\n  // Estatísticas do dashboard\n  getStats: () => \n    api.get('/api/admin/stats'),\n    \n  // Gerenciamento de usuários\n  getUsers: (params: { page?: number, search?: string, role?: string, status?: string }) => {\n    const queryParams = new URLSearchParams();\n    if (params.page) queryParams.append('page', params.page.toString());\n    if (params.search) queryParams.append('search', params.search);\n    if (params.role) queryParams.append('role', params.role);\n    if (params.status) queryParams.append('status', params.status);\n    \n    return api.get(`/api/admin/users?${queryParams.toString()}`);\n  },\n  \n  createUser: (userData: any) => \n    api.post('/api/admin/users', userData),\n    \n  updateUser: (id: string, userData: any) => \n    api.put(`/api/admin/users/${id}`, userData),\n    \n  deleteUser: (id: string) => \n    api.delete(`/api/admin/users/${id}`),\n    \n  // Gerenciamento de empresas\n  getCompanies: (params: { page?: number, search?: string, status?: string }) => {\n    const queryParams = new URLSearchParams();\n    if (params.page) queryParams.append('page', params.page.toString());\n    if (params.search) queryParams.append('search', params.search);\n    if (params.status) queryParams.append('status', params.status);\n    \n    return api.get(`/api/admin/companies?${queryParams.toString()}`);\n  },\n  \n  createCompany: (companyData: any) => \n    api.post('/api/admin/companies', companyData),\n    \n  updateCompany: (id: string, companyData: any) => \n    api.put(`/api/admin/companies/${id}`, companyData),\n    \n  deleteCompany: (id: string) => \n    api.delete(`/api/admin/companies/${id}`),\n  \n  // Gerenciamento de planos\n  getPlansStats: () => \n    api.get('/api/admin/plans/stats'),\n    \n  // Logs e atividade\n  getActivityLogs: (page = 1, limit = 10) => \n    api.get(`/api/admin/logs?page=${page}&limit=${limit}`),\n    \n  // Configurações do sistema\n  getSystemSettings: () => \n    api.get('/api/admin/settings'),\n    \n  updateSystemSettings: (settingsData: any) => \n    api.put('/api/admin/settings', settingsData),\n};\n\nexport default api;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 399, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { authAPI } from '@/lib/api';\nimport { User, AuthResponse } from '@/types';\n\ninterface AuthState {\n  token: string | null;\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (name: string, email: string, password: string, company: string) => Promise<void>;\n  logout: () => void;\n  forgotPassword: (email: string) => Promise<void>;\n  resetPassword: (token: string, password: string) => Promise<void>;\n  changePassword: (currentPassword: string, newPassword: string) => Promise<void>;\n  clearError: () => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set, get) => ({\n      // Inicialize o token a partir do localStorage para garantir que o API interceptor tenha acesso imediato\n      token: typeof window !== 'undefined' ? localStorage.getItem('token') : null,\n      user: null,\n      isAuthenticated: typeof window !== 'undefined' ? !!localStorage.getItem('token') : false,\n      isLoading: false,\n      error: null,\n\n      login: async (email: string, password: string) => {\n        try {\n          set({ isLoading: true, error: null });\n          const response = await authAPI.login(email, password);\n          const { token, user } = response.data.data;\n          \n          // Save token to localStorage for API interceptor\n          localStorage.setItem('token', token);\n          \n          set({\n            token,\n            user,\n            isAuthenticated: true,\n            isLoading: false,\n          });\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.message || 'Failed to login';\n          set({ error: errorMessage, isLoading: false });\n          throw new Error(errorMessage);\n        }\n      },\n\n      register: async (name: string, email: string, password: string, company: string) => {\n        try {\n          set({ isLoading: true, error: null });\n          await authAPI.register(name, email, password, company);\n          set({ isLoading: false });\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.message || 'Failed to register';\n          set({ error: errorMessage, isLoading: false });\n          throw new Error(errorMessage);\n        }\n      },\n\n      logout: () => {\n        localStorage.removeItem('token');\n        set({\n          token: null,\n          user: null,\n          isAuthenticated: false,\n        });\n      },\n\n      forgotPassword: async (email: string) => {\n        try {\n          set({ isLoading: true, error: null });\n          await authAPI.forgotPassword(email);\n          set({ isLoading: false });\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.message || 'Failed to send reset password email';\n          set({ error: errorMessage, isLoading: false });\n          throw new Error(errorMessage);\n        }\n      },\n\n      resetPassword: async (token: string, password: string) => {\n        try {\n          set({ isLoading: true, error: null });\n          await authAPI.resetPassword(token, password);\n          set({ isLoading: false });\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.message || 'Failed to reset password';\n          set({ error: errorMessage, isLoading: false });\n          throw new Error(errorMessage);\n        }\n      },\n\n      changePassword: async (currentPassword: string, newPassword: string) => {\n        try {\n          set({ isLoading: true, error: null });\n          await authAPI.changePassword(currentPassword, newPassword);\n          set({ isLoading: false });\n        } catch (error: any) {\n          const errorMessage = error.response?.data?.message || 'Failed to change password';\n          set({ error: errorMessage, isLoading: false });\n          throw new Error(errorMessage);\n        }\n      },\n\n      clearError: () => set({ error: null }),\n    }),\n    {\n      name: 'auth-storage',\n      partialize: (state) => ({ \n        token: state.token, \n        user: state.user, \n        isAuthenticated: state.isAuthenticated \n      }),\n    }\n  )\n);\n\nexport default useAuthStore;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from 'react';\nimport { useRouter, usePathname } from 'next/navigation';\nimport useAuthStore from '@/store/authStore';\nimport api from '@/lib/api';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n}\n\nconst publicRoutes = ['/auth/login', '/auth/register', '/auth/forgot-password', '/auth/reset-password'];\n\nexport default function ProtectedRoute({ children }: ProtectedRouteProps) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const { token, isAuthenticated, user, logout } = useAuthStore();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isValidatingToken, setIsValidatingToken] = useState(false);\n\n  // Verifica se a rota atual é pública\n  const isPublicRoute = publicRoutes.includes(pathname || '');\n\n  // Usando um ref para evitar loops infinitos\n  const validationCounter = useRef(0);\n  \n  useEffect(() => {\n    // Não tente validar token se já estivermos em uma rota pública\n    if (isPublicRoute) {\n      setIsLoading(false);\n      return;\n    }\n\n    // Limite a quantidade de tentativas de validação para evitar loops infinitos\n    if (validationCounter.current > 2) {\n      console.log('Excesso de validações, limitando para evitar loop');\n      setIsLoading(false);\n      return;\n    }\n\n    // Função para validar o token atual\n    const validateToken = async () => {\n      if (!token) {\n        setIsLoading(false);\n        if (!isPublicRoute) {\n          router.push('/auth/login');\n        }\n        return;\n      }\n\n      try {\n        // Incrementa o contador de validações\n        validationCounter.current += 1;\n        \n        setIsValidatingToken(true);\n        // Faça uma solicitação para um endpoint protegido para validar o token\n        // Verificando se o token é válido usando uma rota protegida simples\n        await api.get('/api/auth/validate-token');\n        setIsValidatingToken(false);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Token inválido ou expirado', error);\n        // Se houver um erro de autenticação, faça logout e redirecione\n        logout();\n        setIsValidatingToken(false);\n        setIsLoading(false);\n        if (!isPublicRoute) {\n          router.push('/auth/login');\n        }\n      }\n    };\n\n    // Use um identificador único para a validação atual\n    const validationId = Date.now();\n    const currentPathname = pathname;\n    \n    // Somente valide o token se a rota for protegida e não estiver já validando\n    if (!isPublicRoute && !isValidatingToken) {\n      // Implemente um atraso mínimo para evitar múltiplas tentativas em sequência\n      const timeout = setTimeout(() => {\n        // Verifica se ainda é a mesma página e validação\n        if (currentPathname === pathname && !isValidatingToken) {\n          validateToken();\n        }\n      }, 1000);\n      \n      return () => clearTimeout(timeout);\n    } else {\n      setIsLoading(false);\n    }\n  // Remover router das dependências porque ele muda frequentemente e causa re-execuções\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [token, isAuthenticated, pathname, isPublicRoute, isValidatingToken, logout]);\n\n  // Efeito para lidar com redirecionamentos após a renderização\n  useEffect(() => {\n    if (!isLoading) {\n      // Redirecionar usuários autenticados para o dashboard se tentarem acessar páginas de autenticação\n      if (isAuthenticated && isPublicRoute) {\n        router.push('/dashboard');\n      }\n      \n      // Redirecionar usuários não autenticados para login se tentarem acessar páginas protegidas\n      if (!isAuthenticated && !isPublicRoute) {\n        router.push('/auth/login');\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isLoading, isAuthenticated, isPublicRoute]);\n  \n  // Se estiver carregando, mostre um spinner ou nada\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"w-10 h-10 border-4 border-emerald-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  // Se estiver fazendo redirecionamento, não mostre nada\n  if ((isAuthenticated && isPublicRoute) || (!isAuthenticated && !isPublicRoute)) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"w-10 h-10 border-4 border-emerald-600 border-t-transparent rounded-full animate-spin\"></div>\n      </div>\n    );\n  }\n\n  return <>{children}</>;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":["file:///home/m/lyz-app/frontend/src/components/providers/AuthProvider.tsx"],"sourcesContent":["'use client';\n\nimport { ReactNode } from 'react';\nimport ProtectedRoute from '../auth/ProtectedRoute';\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Este é um componente cliente que envolve o ProtectedRoute\nexport default function AuthProvider({ children }: AuthProviderProps) {\n  return <ProtectedRoute>{children}</ProtectedRoute>;\n}\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAUe,SAAS,aAAa,EAAE,QAAQ,EAAqB;IAClE,qBAAO,8OAAC,4IAAA,CAAA,UAAc;kBAAE;;;;;;AAC1B","debugId":null}}]
}